#!/bin/bash

# Parse env
# This is generated by the `start_dev_server` script
# which is assumed to start prior to executing this process
source .tests/.env

SERVER_PORT="$NEXT_DEV_SERVER_PORT"
skipDevServerAwait=0

if [[ "$UI_TEST_DEV_SERVER_MODE" = "build" ]]; then
  SERVER_PORT="$UI_TEST_HTTP_SERVER_PORT"

  if ! lsof -i :3001 | grep -q LISTEN; then
    .scripts/test_runner_http_server 2>&1 &
  else
    skipDevServerAwait=1
    echo "ðŸ¤– Skipping server initialisation! Test runner static HTTP server's already running."
  fi
fi

# Should wait for development server readyness
[[ "$skipDevServerAwait" -eq 0 ]] && .scripts/await_dev_server "$SERVER_PORT"

onFailure() {
  echo "ðŸ‘¹ Oops! Test runner failed!"
  exit 1
}

trap cleanup SIGINT

echo "ðŸ¤– Should start the e2e tests..."
if ! pnpm run test:e2e; then
  onFailure
fi

echo "ðŸ¤– Should start the unit tests..."
if ! pnpm run test:unit; then
  onFailure
fi

# Required vars (shared)
source .scripts/test_runner_vars

hash=$(.scripts/hash_dir "$csv_paths")

if [[ -z "$hash" ]]; then
  echo "ðŸ‘¹ Oops! Failed to hash source directory for test runner"
  exit 1
fi

echo "[TEST_RUN] $hash" > "$info_path"

echo
echo "âœ… Test runner completed!"
