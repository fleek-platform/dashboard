name: ⚡️ Deploy Dashboard (Common)

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      fleek_token:
        required: true
      doppler_token:
        required: true
      npm_token:
        required: true

jobs:
  deploy-to-fleek:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      FLEEK_TOKEN: ${{ secrets.fleek_token }}
      DOPPLER_TOKEN: ${{ secrets.doppler_token }}
      TARGET_ENVIRONMENT: ${{ inputs.environment }}
      FLEEK_PROJECT_ID: ${{ vars.FLEEK_PROJECT_ID }}
      FLEEK_SLUG: ${{ vars.FLEEK_SLUG }}
      NEXT_PUBLIC_BASE_PATH: ${{ vars.NEXT_PUBLIC_BASE_PATH }}
      NPM_REGISTRY_HOST: ${{ vars.NPM_REGISTRY_HOST }}
      NPM_TOKEN: ${{ secrets.npm_token }}
      # TODO: This one will be overriden in the doppler step
      # it's excluded in the `scripts/setup-ci-dotenv`
      NEXT_PUBLIC_WEBSITE_URL: ${{ vars.NEXT_PUBLIC_WEBSITE_URL }}
      NEXT_PUBLIC_ALLOW_LANDING_PAGE_LOGIN: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: ./.github/actions/setup-nodejs

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Setup Doppler
        run: |
          doppler configure set token "$DOPPLER_TOKEN"

      - name: Env vars health check
        run: |
          if ! doppler run -- printenv | grep -q 'NEXT_PUBLIC_SDK__AUTHENTICATION_URL'; then
            echo "👹 Oops! Missing required environment variable during health check..."
            exit 1           
          fi

          echo "🚑 Doppler envVars seem healthy!"

      - name: Setup dotenv
        run: |
          .scripts/setup-ci-dotenv

      - name: Install Fleek CLI
        run: pnpm i -g @fleek-platform/cli

      - name: Install Packages
        run: pnpm install

      - name: Setup fleek.config.json
        run: |
          DIST="out"
          BUILD="pnpm run build"
          
          .scripts/setup-fleek-config \
            "$FLEEK_SLUG" \
            "$DIST" \
            "$BUILD"

      - name: Build & deploy
        env:
          NEXT_PUBLIC_BASE_PATH: ""
        run: |
          fleek sites deploy

      - name: Cache build directories and source
        uses: actions/checkout@v4
        id: build-cache
        with:
          path: |
            .
          key: ${{ runner.os }}-build-${{ env.TARGET_ENVIRONMENT }}-${{ github.sha }}

  build-npm-package:
    needs: deploy-to-fleek
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      FLEEK_TOKEN: ${{ secrets.fleek_token }}
      DOPPLER_TOKEN: ${{ secrets.doppler_token }}
      TARGET_ENVIRONMENT: ${{ inputs.environment }}
      FLEEK_PROJECT_ID: ${{ vars.FLEEK_PROJECT_ID }}
      FLEEK_SLUG: ${{ vars.FLEEK_SLUG }}
      NEXT_PUBLIC_BASE_PATH: ${{ vars.NEXT_PUBLIC_BASE_PATH }}
      NPM_REGISTRY_HOST: ${{ vars.NPM_REGISTRY_HOST }}
      NPM_TOKEN: ${{ secrets.npm_token }}
      # TODO: This one will be overriden in the doppler step
      # it's excluded in the `scripts/setup-ci-dotenv`
      NEXT_PUBLIC_WEBSITE_URL: ${{ vars.NEXT_PUBLIC_WEBSITE_URL }}
      NEXT_PUBLIC_ALLOW_LANDING_PAGE_LOGIN: "true"
    steps:
      - name: Restore workspace
        uses: actions/checkout@v4
        id: build-cache
        with:
          path: |
            .
          key: ${{ runner.os }}-build-${{ env.TARGET_ENVIRONMENT }}-${{ github.sha }}
          
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: ./.github/actions/setup-nodejs

      - name: Build NPM package
        run: |
          pnpm run build

      - name: Create .npmrc file
        run: |
          echo "//$NPM_REGISTRY_HOST/:_authToken=$NPM_TOKEN" > .npmrc
          cat .npmrc

      - name: Publish NPM package
        run: |
          tag="prerelease"
          
          if [[ "$TARGET_ENVIRONMENT" == 'production' ]]; then
            tag="latest"
          else
            ./.scripts/set_package_rc_version          
          fi

          pnpm publish \
            --access=public \
            --no-git-checks \
            --tag "$tag"

      - name: Clear
        run: |
          rm -f .env
