name: ‚ö°Ô∏è Deploy Dashboard (Common)

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      fleek_token:
        required: true
      doppler_token:
        required: true

env:
  DOPPLER_TOKEN: ${{ secrets.doppler_token }}
  TARGET_ENVIRONMENT: ${{ inputs.environment }}
  FLEEK_PROJECT_ID: ${{ vars.FLEEK_PROJECT_ID }}
  FLEEK_TOKEN: ${{ secrets.fleek_token }}
  FLEEK_SLUG: ${{ vars.FLEEK_SLUG }}
  NEXT_PUBLIC_BASE_PATH: ${{ vars.NEXT_PUBLIC_BASE_PATH }}
  NEXT_PUBLIC_AGENTS_AI_PATH: ${{ vars.NEXT_PUBLIC_AGENTS_AI_PATH }}
  # TODO: This one will be overriden in the doppler step
  # it's excluded in the `scripts/setup-ci-dotenv`
  NEXT_PUBLIC_WEBSITE_URL: ${{ vars.NEXT_PUBLIC_WEBSITE_URL }}
  NEXT_PUBLIC_DASHBOARD_WEBSITE_URL: ${{ vars.NEXT_PUBLIC_DASHBOARD_WEBSITE_URL }}
  NEXT_PUBLIC_UI__COMMIT_HASH: ${{ github.sha }}

jobs:
  deploy-to-fleek:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      NEXT_PUBLIC_ALLOW_LANDING_PAGE_LOGIN: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: ./.github/actions/setup-nodejs

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Setup Doppler
        run: |
          doppler configure set token "$DOPPLER_TOKEN"

      - name: Env vars health check
        run: |
          if ! doppler run -- printenv | grep -q 'NEXT_PUBLIC_SDK__AUTHENTICATION_URL'; then
            echo "üëπ Oops! Missing required environment variable during health check..."
            exit 1           
          fi

          echo "üöë Doppler envVars seem healthy!"

      - name: Setup dotenv
        run: |
          .scripts/setup-ci-dotenv

      - name: Install Fleek CLI
        run: pnpm i -g @fleek-platform/cli

      - name: Install Packages
        run: pnpm install

      - name: Setup fleek.config.json
        run: |
          DIST="out"
          BUILD="pnpm run build"
          
          .scripts/setup-fleek-config \
            "$FLEEK_SLUG" \
            "$DIST" \
            "$BUILD"

      - name: Build & deploy
        env:
          NEXT_PUBLIC_BASE_PATH: ""
        run: |
          fleek sites deploy

      - name: Cache build directories and source
        uses: actions/cache@v3
        id: build-cache
        with:
          path: |
            .
          key: ${{ runner.os }}-build-${{ env.TARGET_ENVIRONMENT }}-${{ github.sha }}

      - name: Clear
        run: |
          rm -f .env
